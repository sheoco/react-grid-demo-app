{"version":3,"sources":["Navbar.js","CustomContent.js","Card.js","Grid.js","App.js","serviceWorker.js","About.js","Contact.js","index.js"],"names":["Navbar","class","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","CenteredP","props","text","CenteredH","Card","onClick","card_remove","card_key","card_content","ResponsiveGridLayout","WidthProvider","Responsive","Grid","onFormFieldChangeHandler","event","target","setState","name","value","onAddItemHandler","state","box_content","box_row","box_col","box_width","box_height","content","row","parseInt","col","width","height","item_count","layout_arr","concat","key","x","y","w","h","alert","preventDefault","onRemoveItemHandler","item_key","new_layout_arr","filter","item","bind","div_style","background","padding","borderRadius","this","className","breakpoints","lg","md","sm","xs","xxs","cols","rowHeight","isDraggable","isResizable","verticalCompact","compactType","useCSSTransforms","preventCollision","map","arr","style","data-grid","React","PureComponent","AddCard","onSubmit","for","placeholder","onChange","required","min","max","App","Boolean","window","location","hostname","match","About","Contact","routing","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c793a1d8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Navbar = () =>{ \r\n        var str = \r\n            <nav class=\"navbar navbar-expand-lg navbar-dark bd-navbar\">\r\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n                <a class=\"navbar-brand\" href=\"/\">React Grid</a>\r\n                <ul class=\"navbar-nav \">\r\n                    <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\" href=\"/\">Home</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"/about\">About</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"/contact\">Contact</a>\r\n                    </li>\r\n                </ul>\r\n               </div>\r\n            </nav>\r\n\r\n        return (str)\r\n    \r\n}\r\n\r\n\r\nexport default Navbar\r\n\r\n\r\n","import React from 'react'\r\n\r\n\r\n\r\nconst CenteredP = (props)=> {\r\n\r\n   var str= \r\n        <div class=\"div_center\">\r\n            <p class=\"card-text div_center_content\">{props.text}</p>\r\n        </div>\r\n\r\n    return str\r\n}\r\n\r\nconst CenteredH = (props)=> {\r\n\r\n    var str= \r\n        <div class=\"div_centerh\">\r\n        <h1 class=\"card-text div_center_contenth\">{props.text}</h1>\r\n        </div>\r\n\r\n    return str\r\n}\r\n\r\nexport {CenteredP,CenteredH}","import React from 'react'\r\nimport {CenteredP} from './CustomContent.js';\r\n\r\nconst Card = (props)=> {\r\n\r\n            var str= <>\r\n                 <span class=\"dropdown card_remove\">\r\n                            <div type=\"button\" data-toggle=\"dropdown\">  <div class=\"trippledot float-right\"></div></div>\r\n                            <div class=\"dropdown-menu ropdown-menu-md-right\">\r\n                                <p class=\"p_remove\" onClick={props.card_remove} >Remove</p>\r\n                                \r\n                            </div>\r\n                </span>\r\n                        \r\n                <div class=\"card card_cs text-white bg-info\" >\r\n                    <div class=\"card-header\">\r\n                        Card {props.card_key}\r\n\r\n                       \r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <CenteredP text={props.card_content} />\r\n                        \r\n                    </div>\r\n                </div>\r\n                </>\r\n\r\n        return(str)\r\n    \r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport {Responsive,WidthProvider  } from 'react-grid-layout';\r\nimport Card from './Card.js';\r\n\r\n\r\nconst ResponsiveGridLayout = WidthProvider(Responsive);\r\n\r\nclass Grid extends React.PureComponent{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            layout_arr:[\r\n                {key:1,content:'drag me!', x:0, y:0, w:2, h:2},\r\n                {key:2,content:'drag me!', x:2, y:0, w:2, h:2},\r\n                {key:3,content:'drag me!', x:4, y:0, w:2, h:2},\r\n                {key:4,content:'drag me!', x:6, y:0, w:2, h:2},\r\n            ],\r\n            item_count:4,\r\n            box_content:'',\r\n            box_row:'',\r\n            box_col:'',\r\n            box_width:'',\r\n            box_height:'',\r\n        }\r\n\r\n        this.onAddItemHandler = this.onAddItemHandler.bind(this)\r\n        this.onFormFieldChangeHandler = this.onFormFieldChangeHandler.bind(this)\r\n    }\r\n\r\n    onFormFieldChangeHandler = (event)=>{\r\n        \r\n        const target = event.target;\r\n        this.setState({\r\n\t\t\t[target.name]:target.value\r\n\t\t})\r\n    }\r\n\r\n    onAddItemHandler = (event)=>{\r\n\r\n        if(this.state.box_content !=='' && this.state.box_row !=='' && this.state.box_col !=='' && this.state.box_width !=='' && this.state.box_height !=='')\r\n        {\r\n            const content = this.state.box_content\r\n            const row = parseInt(this.state.box_row)\r\n            const col = parseInt(this.state.box_col) \r\n            const width = parseInt(this.state.box_width)\r\n            const height = parseInt(this.state.box_height)\r\n            const item_count = this.state.item_count+1 \r\n\r\n           \r\n            this.setState({\r\n                layout_arr: this.state.layout_arr.concat({key: item_count,content:content, x:col, y:row, w:width, h:height}),\r\n                item_count:item_count,\r\n        \r\n            })\r\n\r\n        }else{\r\n\r\n            alert('Error');\r\n        }\r\n\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    onRemoveItemHandler = (item_key)=>{\r\n\r\n        const new_layout_arr = this.state.layout_arr.filter(item => item.key !== item_key);\r\n        this.setState({ layout_arr: new_layout_arr });\r\n    }\r\n\r\n   \r\n    render(){\r\n\r\n        var div_style={\r\n            background: '#fff',\r\n            padding:0,\r\n            borderRadius:5,\r\n        }\r\n        \r\n        var grid =\r\n                <div class=\"container-fluid\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\">\r\n                            <AddCard onFormFieldChangeHandler={this.onFormFieldChangeHandler} onAddItemHandler={this.onAddItemHandler}/>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                                    <br/>\r\n                                <ResponsiveGridLayout \r\n                                    className=\"layout\" \r\n                                    breakpoints={{lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0}}\r\n                                    cols={{lg: 12, md: 10, sm: 6, xs: 4, xxs: 2}}\r\n                                    rowHeight={100}\r\n                                    isDraggable={true}\r\n                                    isResizable={true}\r\n                                    verticalCompact={true}\r\n                                    compactType=''\r\n                                    useCSSTransforms={false}\r\n                                    preventCollision={false}\r\n                                \r\n\r\n                                >\r\n                                    {this.state.layout_arr.map((arr)=>\r\n                                        \r\n                                        <div style={div_style} key={arr.key}  data-grid={{x:arr.x, y: arr.y, w: arr.w, h: arr.h}}><Card card_key={arr.key} card_content={arr.content} card_remove={this.onRemoveItemHandler.bind(this,arr.key)}/></div>\r\n                                        \r\n                                    )}\r\n                                </ResponsiveGridLayout>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n                \r\n\r\n        return (grid)\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nconst AddCard = (props)=>{\r\n\r\n    var div_style={\r\n        background: '#fff',\r\n        padding:10,\r\n        \r\n    }\r\n\r\n    var str =<><br/>\r\n        <div style={div_style}>\r\n            <h5>Add New Card</h5>\r\n            <hr/>\r\n          <form onSubmit={props.onAddItemHandler}>\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">Content</label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"box_content\" placeholder=\"Enter Box Content..\" onChange={props.onFormFieldChangeHandler} required/>\r\n                 </div>\r\n                 <div class=\"form-group\">\r\n                    <label for=\"\">Row</label>\r\n                    <input type=\"number\" class=\"form-control\" name=\"box_row\" placeholder=\"Enter Row\"  onChange={props.onFormFieldChangeHandler} min=\"0\" required/>\r\n                 </div>\r\n                 <div class=\"form-group\">\r\n                    <label for=\"\">Col</label>\r\n                    <input type=\"number\" class=\"form-control\" name=\"box_col\" placeholder=\"Enter Column\"  onChange={props.onFormFieldChangeHandler} min=\"0\" max=\"12\" required/>\r\n                 </div>\r\n                 <div class=\"form-group\">\r\n                    <label for=\"\">Width</label>\r\n                    <input type=\"number\" class=\"form-control\" name=\"box_width\" placeholder=\"Enter Width\"  onChange={props.onFormFieldChangeHandler} min=\"0\" max=\"12\" required/>\r\n                 </div>\r\n                 <div class=\"form-group\">\r\n                    <label for=\"\">Height</label>\r\n                    <input type=\"number\" class=\"form-control\" name=\"box_height\" placeholder=\"Enter Height\"  onChange={props.onFormFieldChangeHandler} min=\"0\" max=\"6\" required/>\r\n                 </div>\r\n                \r\n                <button type=\"submit\" class=\"btn btn-primary btn-block\">Add</button>\r\n            </form>\r\n        </div>\r\n        </>\r\n\r\n    return str\r\n\r\n}\r\n\r\n\r\nexport default Grid;","import React from 'react';\nimport Navbar from './Navbar.js';\nimport Grid from './Grid.js';\n\nconst App = ()=> {\n  return (\n    <>\n      <Navbar/>\n      <Grid />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\n\r\nimport Navbar from './Navbar.js';\r\nimport { CenteredH} from './CustomContent.js';\r\n\r\n const About = ()=> {  \r\n \r\n    return <>\r\n            <Navbar/>\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                   <CenteredH text='About View'/>\r\n                </div>\r\n            </div>\r\n            </> \r\n    \r\n}  \r\nexport default About  ","import React from 'react'\r\n\r\nimport Navbar from './Navbar.js';\r\nimport {CenteredH} from './CustomContent.js';\r\n\r\nconst Contact = () => {  \r\n  \r\n    return <>\r\n            <Navbar/>\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                   <CenteredH text='Contact View'/>\r\n                </div>\r\n            </div>\r\n            </>   \r\n   \r\n}  \r\nexport default Contact  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Route,BrowserRouter as Router } from 'react-router-dom'  \nimport About from './About';\nimport Contact from './Contact';\n\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n*/\n\nconst routing = (  \n  <Router>  \n    <div>  \n     <Route exact path=\"/\" component={App} />  \n      <Route path=\"/about\" component={About} />  \n      <Route path=\"/contact\" component={Contact} />  \n    </div>  \n  </Router>  \n) \n\nReactDOM.render(routing, document.getElementById('root'));  \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}